name: Build

on: [push, pull_request]

defaults:
  run:
    shell: bash --noprofile --norc -xeo pipefail {0}

jobs:

  build_wheel:

    name: Build wheel (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-10.15', 'ubuntu-16.04', 'windows-2019']

    steps:
      - uses: actions/checkout@v2

      - if: runner.os != 'macOS'
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - if: runner.os == 'macOS'
        run: |
          py_version='3.8.8'
          py_target='10.9'
          py_bin="/Library/Frameworks/Python.framework/Versions/${py_version%.*}/bin"
          curl --output 'python.pkg' "https://www.python.org/ftp/python/$py_version/python-$py_version-macosx$py_target.pkg"
          sudo installer -pkg 'python.pkg' -target /
          sudo ln -snf "$py_bin/python3" /usr/local/bin/python
          export PATH="$py_bin:$PATH"
          echo "$py_bin" >>"$GITHUB_PATH"
          hash -r
          # Target Mavericks.
          export "MACOSX_DEPLOYMENT_TARGET=$py_target"
          echo "MACOSX_DEPLOYMENT_TARGET=$py_target" >>"$GITHUB_ENV"
          # Update certificates.
          "/Applications/Python ${py_version%.*}/Install Certificates.command"

      - run: |
          which python3
          python3 --version

      # Setup.
      - run: python3 -m pip install -U setuptools wheel
      - if: runner.os == 'Linux'
        run: |
          python3 -m pip install auditwheel
          sudo apt-get update -qqy
          sudo apt-get install -qqy libusb-1.0-0
          ldconfig -p | grep libusb
      - if: runner.os == 'macOS'
        run: |
          python3 -m pip install delocate
          # brew list libusb || brew install libusb
          curl --output 'libusb.zip' 'https://cdn.discordapp.com/attachments/144999734254370816/829889472027951105/1.0.24.zip'
          unzip -j libusb.zip '*.dylib'
          echo "DYLD_LIBRARY_PATH=$PWD" >>"$GITHUB_ENV"
      - if: runner.os == 'Windows'
        run: |
          curl --location --output 'libusb.7z' 'https://github.com/libusb/libusb/releases/download/v1.0.24/libusb-1.0.24.7z'
          7z e 'libusb.7z' 'VS2019/MS64/dll/libusb-1.0.dll'
          ls -l
          echo "$(cygpath -w -a "$PWD")" >>"$GITHUB_PATH"

      # Build wheel.
      - run: |
          python3 setup.py bdist_wheel
          unzip -l dist/*.whl

      # Check/repair wheel.
      - if: runner.os == 'macOS'
        run: |
          delocate-listdeps dist/*.whl
          delocate-wheel dist/*.whl
      - if: runner.os == 'Linux'
        run: |
          auditwheel show dist/*.whl
          auditwheel repair --plat manylinux2014_x86_64 dist/*.whl
          mv dist dist.bak
          mv wheelhouse dist

      # Upload result.
      - uses: actions/upload-artifact@v2
        with:
          name: Wheel (${{ runner.os }})
          path: dist/*
